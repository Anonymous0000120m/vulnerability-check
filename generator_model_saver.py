import tensorflow as tf
from tensorflow.keras import layers, Input
import logging

class GeneratorModelSaver:
    def __init__(self, model):
        self.model = model
        self.logger = logging.getLogger(__name__)

    def save_generator_model(self, filename):
        try:
            self.model.save(filename)
            self.logger.info(f"Generator model saved as {filename}")
        except Exception as e:
            self.logger.error(f"Failed to save generator model: {e}")
            raise e

if __name__ == "__main__":
    # 创建并编译生成器模型
    generator = tf.keras.Sequential([
        Input(shape=(100,)),
        layers.Dense(256, activation='relu'),
        layers.Dense(512, activation='relu'),
        layers.Dense(784, activation='sigmoid'),
        layers.Reshape((28, 28, 1))
    ])
    generator.compile(loss='binary_crossentropy', optimizer='adam')

    # 创建 GeneratorModelSaver 实例
    saver = GeneratorModelSaver(generator)

    # 保存生成器模型为 .keras 文件
    saver.save_generator_model("generator_model.keras")
