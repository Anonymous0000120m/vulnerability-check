#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <stdexcept>
#include <sstream>
#include "matplotlibcpp.h"

namespace plt = matplotlibcpp;

class CSVReader {
public:
    CSVReader(const std::string& filename) : filename(filename) {}

    std::vector<std::vector<std::string>> readFromCSV() {
        std::ifstream file(filename);
        if (!file.is_open()) {
            logError("Unable to open file: " + filename);
            throw std::runtime_error("File not found: " + filename);
        }

        std::vector<std::vector<std::string>> data;
        std::string line;

        while (std::getline(file, line)) {
            std::vector<std::string> row;
            std::stringstream ss(line);
            std::string value;

            while (std::getline(ss, value, ',')) {
                row.push_back(value);
            }
            data.push_back(row);
        }
        file.close();
        return data;
    }

private:
    std::string filename;

    void logError(const std::string& message) {
        std::ofstream logFile("error_log.txt", std::ios_base::app);
        if (logFile.is_open()) {
            logFile << message << std::endl;
            logFile.close();
        }
    }
};

int main() {
    try {
        CSVReader reader("generated_data.csv");
        std::vector<std::vector<std::string>> generatedData = reader.readFromCSV();

        // 假定 CSV 文件有三列数据
        std::vector<double> x, y, z;

        for (const auto& row : generatedData) {
            if (row.size() < 3) continue; // 确保行有足够的列
            x.push_back(std::stod(row[0]));
            y.push_back(std::stod(row[1]));
            z.push_back(std::stod(row[2]));
        }

        // 数据可视化
        plt::figure_size(1200, 600);

        // 二维曲线
        plt::subplot(1, 2, 1);
        plt::plot(x, y);
        plt::title("Two-dimensional curve");

        // 三维曲线
        plt::subplot(1, 2, 2);
        plt::scatter3(x, y, z);
        plt::title("Three-dimensional curve");

        plt::show();

    } catch (const std::exception& e) {
        std::cerr << "An error occurred: " << e.what() << std::endl;
    }
    return 0;
}
